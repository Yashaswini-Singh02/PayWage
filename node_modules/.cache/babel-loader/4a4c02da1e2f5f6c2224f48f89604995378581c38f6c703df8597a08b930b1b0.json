{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserOperationEventListener = void 0;\nconst utils_1 = require(\"ethers/lib/utils\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = (0, debug_1.default)('aa.listener');\nconst DEFAULT_TRANSACTION_TIMEOUT = 10000;\n/**\n * This class encapsulates Ethers.js listener function and necessary UserOperation details to\n * discover a TransactionReceipt for the operation.\n */\nclass UserOperationEventListener {\n  constructor(resolve, reject, entryPoint, sender, userOpHash, nonce, timeout) {\n    var _a;\n    this.resolve = resolve;\n    this.reject = reject;\n    this.entryPoint = entryPoint;\n    this.sender = sender;\n    this.userOpHash = userOpHash;\n    this.nonce = nonce;\n    this.timeout = timeout;\n    this.resolved = false;\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    this.boundLisener = this.listenerCallback.bind(this);\n    setTimeout(() => {\n      this.stop();\n      this.reject(new Error('Timed out'));\n    }, (_a = this.timeout) !== null && _a !== void 0 ? _a : DEFAULT_TRANSACTION_TIMEOUT);\n  }\n  start() {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    const filter = this.entryPoint.filters.UserOperationEvent(this.userOpHash);\n    // listener takes time... first query directly:\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    setTimeout(async () => {\n      const res = await this.entryPoint.queryFilter(filter, 'latest');\n      if (res.length > 0) {\n        void this.listenerCallback(res[0]);\n      } else {\n        this.entryPoint.once(filter, this.boundLisener);\n      }\n    }, 100);\n  }\n  stop() {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    this.entryPoint.off('UserOperationEvent', this.boundLisener);\n  }\n  async listenerCallback() {\n    for (var _len = arguments.length, param = new Array(_len), _key = 0; _key < _len; _key++) {\n      param[_key] = arguments[_key];\n    }\n    var _a;\n    const event = arguments[arguments.length - 1];\n    if (event.args == null) {\n      console.error('got event without args', event);\n      return;\n    }\n    // TODO: can this happen? we register to event by userOpHash..\n    if (event.args.userOpHash !== this.userOpHash) {\n      console.log(`== event with wrong userOpHash: sender/nonce: event.${event.args.sender}@${event.args.nonce.toString()}!= userOp.${this.sender}@${parseInt((_a = this.nonce) === null || _a === void 0 ? void 0 : _a.toString())}`);\n      return;\n    }\n    const transactionReceipt = await event.getTransactionReceipt();\n    transactionReceipt.transactionHash = this.userOpHash;\n    debug('got event with status=', event.args.success, 'gasUsed=', transactionReceipt.gasUsed);\n    // before returning the receipt, update the status from the event.\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (!event.args.success) {\n      await this.extractFailureReason(transactionReceipt);\n    }\n    this.stop();\n    this.resolve(transactionReceipt);\n    this.resolved = true;\n  }\n  async extractFailureReason(receipt) {\n    debug('mark tx as failed');\n    receipt.status = 0;\n    const revertReasonEvents = await this.entryPoint.queryFilter(this.entryPoint.filters.UserOperationRevertReason(this.userOpHash, this.sender), receipt.blockHash);\n    if (revertReasonEvents[0] != null) {\n      let message = revertReasonEvents[0].args.revertReason;\n      if (message.startsWith('0x08c379a0')) {\n        // Error(string)\n        message = utils_1.defaultAbiCoder.decode(['string'], '0x' + message.substring(10)).toString();\n      }\n      debug(`rejecting with reason: ${message}`);\n      this.reject(new Error(`UserOp failed with reason: ${message}`));\n    }\n  }\n}\nexports.UserOperationEventListener = UserOperationEventListener;","map":{"version":3,"names":["utils_1","require","debug_1","__importDefault","debug","default","DEFAULT_TRANSACTION_TIMEOUT","UserOperationEventListener","constructor","resolve","reject","entryPoint","sender","userOpHash","nonce","timeout","resolved","boundLisener","listenerCallback","bind","setTimeout","stop","Error","_a","start","filter","filters","UserOperationEvent","res","queryFilter","length","once","off","_len","arguments","param","Array","_key","event","args","console","error","log","toString","parseInt","transactionReceipt","getTransactionReceipt","transactionHash","success","gasUsed","extractFailureReason","receipt","status","revertReasonEvents","UserOperationRevertReason","blockHash","message","revertReason","startsWith","defaultAbiCoder","decode","substring","exports"],"sources":["../../src/UserOperationEventListener.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nexports.__esModule = true;\nexports.BasePaymaster__factory = void 0;\nvar ethers_1 = require(\"ethers\");\nvar _abi = [{\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"address\",\n    name: \"previousOwner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"newOwner\",\n    type: \"address\"\n  }],\n  name: \"OwnershipTransferred\",\n  type: \"event\"\n}, {\n  inputs: [{\n    internalType: \"uint32\",\n    name: \"unstakeDelaySec\",\n    type: \"uint32\"\n  }],\n  name: \"addStake\",\n  outputs: [],\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"deposit\",\n  outputs: [],\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"entryPoint\",\n  outputs: [{\n    internalType: \"contract IEntryPoint\",\n    name: \"\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"getDeposit\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"owner\",\n  outputs: [{\n    internalType: \"address\",\n    name: \"\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"enum IPaymaster.PostOpMode\",\n    name: \"mode\",\n    type: \"uint8\"\n  }, {\n    internalType: \"bytes\",\n    name: \"context\",\n    type: \"bytes\"\n  }, {\n    internalType: \"uint256\",\n    name: \"actualGasCost\",\n    type: \"uint256\"\n  }],\n  name: \"postOp\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"renounceOwnership\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"newOwner\",\n    type: \"address\"\n  }],\n  name: \"transferOwnership\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"unlockStake\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"address\",\n      name: \"sender\",\n      type: \"address\"\n    }, {\n      internalType: \"uint256\",\n      name: \"nonce\",\n      type: \"uint256\"\n    }, {\n      internalType: \"bytes\",\n      name: \"initCode\",\n      type: \"bytes\"\n    }, {\n      internalType: \"bytes\",\n      name: \"callData\",\n      type: \"bytes\"\n    }, {\n      internalType: \"uint256\",\n      name: \"callGasLimit\",\n      type: \"uint256\"\n    }, {\n      internalType: \"uint256\",\n      name: \"verificationGasLimit\",\n      type: \"uint256\"\n    }, {\n      internalType: \"uint256\",\n      name: \"preVerificationGas\",\n      type: \"uint256\"\n    }, {\n      internalType: \"uint256\",\n      name: \"maxFeePerGas\",\n      type: \"uint256\"\n    }, {\n      internalType: \"uint256\",\n      name: \"maxPriorityFeePerGas\",\n      type: \"uint256\"\n    }, {\n      internalType: \"bytes\",\n      name: \"paymasterAndData\",\n      type: \"bytes\"\n    }, {\n      internalType: \"bytes\",\n      name: \"signature\",\n      type: \"bytes\"\n    }],\n    internalType: \"struct UserOperation\",\n    name: \"userOp\",\n    type: \"tuple\"\n  }, {\n    internalType: \"bytes32\",\n    name: \"userOpHash\",\n    type: \"bytes32\"\n  }, {\n    internalType: \"uint256\",\n    name: \"maxCost\",\n    type: \"uint256\"\n  }],\n  name: \"validatePaymasterUserOp\",\n  outputs: [{\n    internalType: \"bytes\",\n    name: \"context\",\n    type: \"bytes\"\n  }, {\n    internalType: \"uint256\",\n    name: \"validationData\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address payable\",\n    name: \"withdrawAddress\",\n    type: \"address\"\n  }],\n  name: \"withdrawStake\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address payable\",\n    name: \"withdrawAddress\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"withdrawTo\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}];\nvar BasePaymaster__factory = /** @class */function () {\n  function BasePaymaster__factory() {}\n  BasePaymaster__factory.createInterface = function () {\n    return new ethers_1.utils.Interface(_abi);\n  };\n  BasePaymaster__factory.connect = function (address, signerOrProvider) {\n    return new ethers_1.Contract(address, _abi, signerOrProvider);\n  };\n  BasePaymaster__factory.abi = _abi;\n  return BasePaymaster__factory;\n}();\nexports.BasePaymaster__factory = BasePaymaster__factory;","map":{"version":3,"names":["exports","__esModule","BasePaymaster__factory","ethers_1","require","_abi","anonymous","inputs","indexed","internalType","name","type","outputs","stateMutability","components","createInterface","utils","Interface","connect","address","signerOrProvider","Contract","abi"],"sources":["C:/Users/yasha/OneDrive/Desktop/PayWage/node_modules/@account-abstraction/contracts/dist/types/factories/BasePaymaster__factory.js"],"sourcesContent":["\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nexports.__esModule = true;\nexports.BasePaymaster__factory = void 0;\nvar ethers_1 = require(\"ethers\");\nvar _abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"previousOwner\",\n                type: \"address\"\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"newOwner\",\n                type: \"address\"\n            },\n        ],\n        name: \"OwnershipTransferred\",\n        type: \"event\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint32\",\n                name: \"unstakeDelaySec\",\n                type: \"uint32\"\n            },\n        ],\n        name: \"addStake\",\n        outputs: [],\n        stateMutability: \"payable\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"deposit\",\n        outputs: [],\n        stateMutability: \"payable\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"entryPoint\",\n        outputs: [\n            {\n                internalType: \"contract IEntryPoint\",\n                name: \"\",\n                type: \"address\"\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"getDeposit\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"owner\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\"\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"enum IPaymaster.PostOpMode\",\n                name: \"mode\",\n                type: \"uint8\"\n            },\n            {\n                internalType: \"bytes\",\n                name: \"context\",\n                type: \"bytes\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"actualGasCost\",\n                type: \"uint256\"\n            },\n        ],\n        name: \"postOp\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"renounceOwnership\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"newOwner\",\n                type: \"address\"\n            },\n        ],\n        name: \"transferOwnership\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"unlockStake\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"address\",\n                        name: \"sender\",\n                        type: \"address\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"nonce\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"initCode\",\n                        type: \"bytes\"\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"callData\",\n                        type: \"bytes\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"callGasLimit\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"verificationGasLimit\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"preVerificationGas\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"maxFeePerGas\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"maxPriorityFeePerGas\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"paymasterAndData\",\n                        type: \"bytes\"\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"signature\",\n                        type: \"bytes\"\n                    },\n                ],\n                internalType: \"struct UserOperation\",\n                name: \"userOp\",\n                type: \"tuple\"\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"userOpHash\",\n                type: \"bytes32\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"maxCost\",\n                type: \"uint256\"\n            },\n        ],\n        name: \"validatePaymasterUserOp\",\n        outputs: [\n            {\n                internalType: \"bytes\",\n                name: \"context\",\n                type: \"bytes\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"validationData\",\n                type: \"uint256\"\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address payable\",\n                name: \"withdrawAddress\",\n                type: \"address\"\n            },\n        ],\n        name: \"withdrawStake\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address payable\",\n                name: \"withdrawAddress\",\n                type: \"address\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\"\n            },\n        ],\n        name: \"withdrawTo\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n];\nvar BasePaymaster__factory = /** @class */ (function () {\n    function BasePaymaster__factory() {\n    }\n    BasePaymaster__factory.createInterface = function () {\n        return new ethers_1.utils.Interface(_abi);\n    };\n    BasePaymaster__factory.connect = function (address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    };\n    BasePaymaster__factory.abi = _abi;\n    return BasePaymaster__factory;\n}());\nexports.BasePaymaster__factory = BasePaymaster__factory;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nexports.__esModule = true;\nexports.IAggregator__factory = void 0;\nvar ethers_1 = require(\"ethers\");\nvar _abi = [{\n  inputs: [{\n    components: [{\n      internalType: \"address\",\n      name: \"sender\",\n      type: \"address\"\n    }, {\n      internalType: \"uint256\",\n      name: \"nonce\",\n      type: \"uint256\"\n    }, {\n      internalType: \"bytes\",\n      name: \"initCode\",\n      type: \"bytes\"\n    }, {\n      internalType: \"bytes\",\n      name: \"callData\",\n      type: \"bytes\"\n    }, {\n      internalType: \"uint256\",\n      name: \"callGasLimit\",\n      type: \"uint256\"\n    }, {\n      internalType: \"uint256\",\n      name: \"verificationGasLimit\",\n      type: \"uint256\"\n    }, {\n      internalType: \"uint256\",\n      name: \"preVerificationGas\",\n      type: \"uint256\"\n    }, {\n      internalType: \"uint256\",\n      name: \"maxFeePerGas\",\n      type: \"uint256\"\n    }, {\n      internalType: \"uint256\",\n      name: \"maxPriorityFeePerGas\",\n      type: \"uint256\"\n    }, {\n      internalType: \"bytes\",\n      name: \"paymasterAndData\",\n      type: \"bytes\"\n    }, {\n      internalType: \"bytes\",\n      name: \"signature\",\n      type: \"bytes\"\n    }],\n    internalType: \"struct UserOperation[]\",\n    name: \"userOps\",\n    type: \"tuple[]\"\n  }],\n  name: \"aggregateSignatures\",\n  outputs: [{\n    internalType: \"bytes\",\n    name: \"aggregatedSignature\",\n    type: \"bytes\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"address\",\n      name: \"sender\",\n      type: \"address\"\n    }, {\n      internalType: \"uint256\",\n      name: \"nonce\",\n      type: \"uint256\"\n    }, {\n      internalType: \"bytes\",\n      name: \"initCode\",\n      type: \"bytes\"\n    }, {\n      internalType: \"bytes\",\n      name: \"callData\",\n      type: \"bytes\"\n    }, {\n      internalType: \"uint256\",\n      name: \"callGasLimit\",\n      type: \"uint256\"\n    }, {\n      internalType: \"uint256\",\n      name: \"verificationGasLimit\",\n      type: \"uint256\"\n    }, {\n      internalType: \"uint256\",\n      name: \"preVerificationGas\",\n      type: \"uint256\"\n    }, {\n      internalType: \"uint256\",\n      name: \"maxFeePerGas\",\n      type: \"uint256\"\n    }, {\n      internalType: \"uint256\",\n      name: \"maxPriorityFeePerGas\",\n      type: \"uint256\"\n    }, {\n      internalType: \"bytes\",\n      name: \"paymasterAndData\",\n      type: \"bytes\"\n    }, {\n      internalType: \"bytes\",\n      name: \"signature\",\n      type: \"bytes\"\n    }],\n    internalType: \"struct UserOperation[]\",\n    name: \"userOps\",\n    type: \"tuple[]\"\n  }, {\n    internalType: \"bytes\",\n    name: \"signature\",\n    type: \"bytes\"\n  }],\n  name: \"validateSignatures\",\n  outputs: [],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"address\",\n      name: \"sender\",\n      type: \"address\"\n    }, {\n      internalType: \"uint256\",\n      name: \"nonce\",\n      type: \"uint256\"\n    }, {\n      internalType: \"bytes\",\n      name: \"initCode\",\n      type: \"bytes\"\n    }, {\n      internalType: \"bytes\",\n      name: \"callData\",\n      type: \"bytes\"\n    }, {\n      internalType: \"uint256\",\n      name: \"callGasLimit\",\n      type: \"uint256\"\n    }, {\n      internalType: \"uint256\",\n      name: \"verificationGasLimit\",\n      type: \"uint256\"\n    }, {\n      internalType: \"uint256\",\n      name: \"preVerificationGas\",\n      type: \"uint256\"\n    }, {\n      internalType: \"uint256\",\n      name: \"maxFeePerGas\",\n      type: \"uint256\"\n    }, {\n      internalType: \"uint256\",\n      name: \"maxPriorityFeePerGas\",\n      type: \"uint256\"\n    }, {\n      internalType: \"bytes\",\n      name: \"paymasterAndData\",\n      type: \"bytes\"\n    }, {\n      internalType: \"bytes\",\n      name: \"signature\",\n      type: \"bytes\"\n    }],\n    internalType: \"struct UserOperation\",\n    name: \"userOp\",\n    type: \"tuple\"\n  }],\n  name: \"validateUserOpSignature\",\n  outputs: [{\n    internalType: \"bytes\",\n    name: \"sigForUserOp\",\n    type: \"bytes\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\nvar IAggregator__factory = /** @class */function () {\n  function IAggregator__factory() {}\n  IAggregator__factory.createInterface = function () {\n    return new ethers_1.utils.Interface(_abi);\n  };\n  IAggregator__factory.connect = function (address, signerOrProvider) {\n    return new ethers_1.Contract(address, _abi, signerOrProvider);\n  };\n  IAggregator__factory.abi = _abi;\n  return IAggregator__factory;\n}();\nexports.IAggregator__factory = IAggregator__factory;","map":{"version":3,"names":["exports","__esModule","IAggregator__factory","ethers_1","require","_abi","inputs","components","internalType","name","type","outputs","stateMutability","createInterface","utils","Interface","connect","address","signerOrProvider","Contract","abi"],"sources":["C:/Users/yasha/OneDrive/Desktop/PayWage/node_modules/@account-abstraction/contracts/dist/types/factories/IAggregator__factory.js"],"sourcesContent":["\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nexports.__esModule = true;\nexports.IAggregator__factory = void 0;\nvar ethers_1 = require(\"ethers\");\nvar _abi = [\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"address\",\n                        name: \"sender\",\n                        type: \"address\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"nonce\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"initCode\",\n                        type: \"bytes\"\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"callData\",\n                        type: \"bytes\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"callGasLimit\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"verificationGasLimit\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"preVerificationGas\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"maxFeePerGas\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"maxPriorityFeePerGas\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"paymasterAndData\",\n                        type: \"bytes\"\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"signature\",\n                        type: \"bytes\"\n                    },\n                ],\n                internalType: \"struct UserOperation[]\",\n                name: \"userOps\",\n                type: \"tuple[]\"\n            },\n        ],\n        name: \"aggregateSignatures\",\n        outputs: [\n            {\n                internalType: \"bytes\",\n                name: \"aggregatedSignature\",\n                type: \"bytes\"\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"address\",\n                        name: \"sender\",\n                        type: \"address\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"nonce\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"initCode\",\n                        type: \"bytes\"\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"callData\",\n                        type: \"bytes\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"callGasLimit\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"verificationGasLimit\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"preVerificationGas\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"maxFeePerGas\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"maxPriorityFeePerGas\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"paymasterAndData\",\n                        type: \"bytes\"\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"signature\",\n                        type: \"bytes\"\n                    },\n                ],\n                internalType: \"struct UserOperation[]\",\n                name: \"userOps\",\n                type: \"tuple[]\"\n            },\n            {\n                internalType: \"bytes\",\n                name: \"signature\",\n                type: \"bytes\"\n            },\n        ],\n        name: \"validateSignatures\",\n        outputs: [],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"address\",\n                        name: \"sender\",\n                        type: \"address\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"nonce\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"initCode\",\n                        type: \"bytes\"\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"callData\",\n                        type: \"bytes\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"callGasLimit\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"verificationGasLimit\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"preVerificationGas\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"maxFeePerGas\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"maxPriorityFeePerGas\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"paymasterAndData\",\n                        type: \"bytes\"\n                    },\n                    {\n                        internalType: \"bytes\",\n                        name: \"signature\",\n                        type: \"bytes\"\n                    },\n                ],\n                internalType: \"struct UserOperation\",\n                name: \"userOp\",\n                type: \"tuple\"\n            },\n        ],\n        name: \"validateUserOpSignature\",\n        outputs: [\n            {\n                internalType: \"bytes\",\n                name: \"sigForUserOp\",\n                type: \"bytes\"\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n];\nvar IAggregator__factory = /** @class */ (function () {\n    function IAggregator__factory() {\n    }\n    IAggregator__factory.createInterface = function () {\n        return new ethers_1.utils.Interface(_abi);\n    };\n    IAggregator__factory.connect = function (address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    };\n    IAggregator__factory.abi = _abi;\n    return IAggregator__factory;\n}());\nexports.IAggregator__factory = IAggregator__factory;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACAA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,oBAAoB,GAAG,KAAK,CAAC;AACrC,IAAIC,QAAQ,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,IAAIC,IAAI,GAAG,CACP;EACIC,MAAM,EAAE,CACJ;IACIC,UAAU,EAAE,CACR;MACIC,YAAY,EAAE,SAAS;MACvBC,IAAI,EAAE,QAAQ;MACdC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,SAAS;MACvBC,IAAI,EAAE,OAAO;MACbC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,OAAO;MACrBC,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,OAAO;MACrBC,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,SAAS;MACvBC,IAAI,EAAE,cAAc;MACpBC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,SAAS;MACvBC,IAAI,EAAE,sBAAsB;MAC5BC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,SAAS;MACvBC,IAAI,EAAE,oBAAoB;MAC1BC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,SAAS;MACvBC,IAAI,EAAE,cAAc;MACpBC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,SAAS;MACvBC,IAAI,EAAE,sBAAsB;MAC5BC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,OAAO;MACrBC,IAAI,EAAE,kBAAkB;MACxBC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,OAAO;MACrBC,IAAI,EAAE,WAAW;MACjBC,IAAI,EAAE;IACV,CAAC,CACJ;IACDF,YAAY,EAAE,wBAAwB;IACtCC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACV,CAAC,CACJ;EACDD,IAAI,EAAE,qBAAqB;EAC3BE,OAAO,EAAE,CACL;IACIH,YAAY,EAAE,OAAO;IACrBC,IAAI,EAAE,qBAAqB;IAC3BC,IAAI,EAAE;EACV,CAAC,CACJ;EACDE,eAAe,EAAE,MAAM;EACvBF,IAAI,EAAE;AACV,CAAC,EACD;EACIJ,MAAM,EAAE,CACJ;IACIC,UAAU,EAAE,CACR;MACIC,YAAY,EAAE,SAAS;MACvBC,IAAI,EAAE,QAAQ;MACdC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,SAAS;MACvBC,IAAI,EAAE,OAAO;MACbC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,OAAO;MACrBC,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,OAAO;MACrBC,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,SAAS;MACvBC,IAAI,EAAE,cAAc;MACpBC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,SAAS;MACvBC,IAAI,EAAE,sBAAsB;MAC5BC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,SAAS;MACvBC,IAAI,EAAE,oBAAoB;MAC1BC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,SAAS;MACvBC,IAAI,EAAE,cAAc;MACpBC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,SAAS;MACvBC,IAAI,EAAE,sBAAsB;MAC5BC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,OAAO;MACrBC,IAAI,EAAE,kBAAkB;MACxBC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,OAAO;MACrBC,IAAI,EAAE,WAAW;MACjBC,IAAI,EAAE;IACV,CAAC,CACJ;IACDF,YAAY,EAAE,wBAAwB;IACtCC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACV,CAAC,EACD;IACIF,YAAY,EAAE,OAAO;IACrBC,IAAI,EAAE,WAAW;IACjBC,IAAI,EAAE;EACV,CAAC,CACJ;EACDD,IAAI,EAAE,oBAAoB;EAC1BE,OAAO,EAAE,EAAE;EACXC,eAAe,EAAE,MAAM;EACvBF,IAAI,EAAE;AACV,CAAC,EACD;EACIJ,MAAM,EAAE,CACJ;IACIC,UAAU,EAAE,CACR;MACIC,YAAY,EAAE,SAAS;MACvBC,IAAI,EAAE,QAAQ;MACdC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,SAAS;MACvBC,IAAI,EAAE,OAAO;MACbC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,OAAO;MACrBC,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,OAAO;MACrBC,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,SAAS;MACvBC,IAAI,EAAE,cAAc;MACpBC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,SAAS;MACvBC,IAAI,EAAE,sBAAsB;MAC5BC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,SAAS;MACvBC,IAAI,EAAE,oBAAoB;MAC1BC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,SAAS;MACvBC,IAAI,EAAE,cAAc;MACpBC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,SAAS;MACvBC,IAAI,EAAE,sBAAsB;MAC5BC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,OAAO;MACrBC,IAAI,EAAE,kBAAkB;MACxBC,IAAI,EAAE;IACV,CAAC,EACD;MACIF,YAAY,EAAE,OAAO;MACrBC,IAAI,EAAE,WAAW;MACjBC,IAAI,EAAE;IACV,CAAC,CACJ;IACDF,YAAY,EAAE,sBAAsB;IACpCC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE;EACV,CAAC,CACJ;EACDD,IAAI,EAAE,yBAAyB;EAC/BE,OAAO,EAAE,CACL;IACIH,YAAY,EAAE,OAAO;IACrBC,IAAI,EAAE,cAAc;IACpBC,IAAI,EAAE;EACV,CAAC,CACJ;EACDE,eAAe,EAAE,MAAM;EACvBF,IAAI,EAAE;AACV,CAAC,CACJ;AACD,IAAIR,oBAAoB,GAAG,aAAe,YAAY;EAClD,SAASA,oBAAoBA,CAAA,EAAG,CAChC;EACAA,oBAAoB,CAACW,eAAe,GAAG,YAAY;IAC/C,OAAO,IAAIV,QAAQ,CAACW,KAAK,CAACC,SAAS,CAACV,IAAI,CAAC;EAC7C,CAAC;EACDH,oBAAoB,CAACc,OAAO,GAAG,UAAUC,OAAO,EAAEC,gBAAgB,EAAE;IAChE,OAAO,IAAIf,QAAQ,CAACgB,QAAQ,CAACF,OAAO,EAAEZ,IAAI,EAAEa,gBAAgB,CAAC;EACjE,CAAC;EACDhB,oBAAoB,CAACkB,GAAG,GAAGf,IAAI;EAC/B,OAAOH,oBAAoB;AAC/B,CAAC,EAAG;AACJF,OAAO,CAACE,oBAAoB,GAAGA,oBAAoB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
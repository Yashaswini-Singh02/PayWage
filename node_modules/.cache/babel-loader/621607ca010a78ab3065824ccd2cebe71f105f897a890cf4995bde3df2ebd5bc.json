{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.wrapProvider = void 0;\nconst contracts_1 = require(\"@account-abstraction/contracts\");\nconst SimpleAccountAPI_1 = require(\"./SimpleAccountAPI\");\nconst ERC4337EthersProvider_1 = require(\"./ERC4337EthersProvider\");\nconst HttpRpcClient_1 = require(\"./HttpRpcClient\");\nconst DeterministicDeployer_1 = require(\"./DeterministicDeployer\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = (0, debug_1.default)('aa.wrapProvider');\n/**\n * wrap an existing provider to tunnel requests through Account Abstraction.\n * @param originalProvider the normal provider\n * @param config see ClientConfig for more info\n * @param originalSigner use this signer as the owner. of this wallet. By default, use the provider's signer\n */\nasync function wrapProvider(originalProvider, config) {\n  let originalSigner = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : originalProvider.getSigner();\n  const entryPoint = contracts_1.EntryPoint__factory.connect(config.entryPointAddress, originalProvider);\n  // Initial SimpleAccount instance is not deployed and exists just for the interface\n  const detDeployer = new DeterministicDeployer_1.DeterministicDeployer(originalProvider);\n  const SimpleAccountFactory = await detDeployer.deterministicDeploy(new contracts_1.SimpleAccountFactory__factory(), 0, [entryPoint.address]);\n  const smartAccountAPI = new SimpleAccountAPI_1.SimpleAccountAPI({\n    provider: originalProvider,\n    entryPointAddress: entryPoint.address,\n    owner: originalSigner,\n    factoryAddress: SimpleAccountFactory,\n    paymasterAPI: config.paymasterAPI\n  });\n  debug('config=', config);\n  const chainId = await originalProvider.getNetwork().then(net => net.chainId);\n  const httpRpcClient = new HttpRpcClient_1.HttpRpcClient(config.bundlerUrl, config.entryPointAddress, chainId);\n  return await new ERC4337EthersProvider_1.ERC4337EthersProvider(chainId, config, originalSigner, originalProvider, httpRpcClient, entryPoint, smartAccountAPI).init();\n}\nexports.wrapProvider = wrapProvider;","map":{"version":3,"names":["contracts_1","require","SimpleAccountAPI_1","ERC4337EthersProvider_1","HttpRpcClient_1","DeterministicDeployer_1","debug_1","__importDefault","debug","default","wrapProvider","originalProvider","config","originalSigner","arguments","length","undefined","getSigner","entryPoint","EntryPoint__factory","connect","entryPointAddress","detDeployer","DeterministicDeployer","SimpleAccountFactory","deterministicDeploy","SimpleAccountFactory__factory","address","smartAccountAPI","SimpleAccountAPI","provider","owner","factoryAddress","paymasterAPI","chainId","getNetwork","then","net","httpRpcClient","HttpRpcClient","bundlerUrl","ERC4337EthersProvider","init","exports"],"sources":["../../src/Provider.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;AAEA,MAAAA,WAAA,GAAAC,OAAA;AAGA,MAAAC,kBAAA,GAAAD,OAAA;AACA,MAAAE,uBAAA,GAAAF,OAAA;AACA,MAAAG,eAAA,GAAAH,OAAA;AACA,MAAAI,uBAAA,GAAAJ,OAAA;AAEA,MAAAK,OAAA,GAAAC,eAAA,CAAAN,OAAA;AAEA,MAAMO,KAAK,GAAG,IAAAF,OAAA,CAAAG,OAAK,EAAC,iBAAiB,CAAC;AAEtC;;;;;;AAMO,eAAeC,YAAYA,CAChCC,gBAAiC,EACjCC,MAAoB,EACiC;EAAA,IAArDC,cAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAyBH,gBAAgB,CAACM,SAAS,EAAE;EAErD,MAAMC,UAAU,GAAGlB,WAAA,CAAAmB,mBAAmB,CAACC,OAAO,CAACR,MAAM,CAACS,iBAAiB,EAAEV,gBAAgB,CAAC;EAC1F;EACA,MAAMW,WAAW,GAAG,IAAIjB,uBAAA,CAAAkB,qBAAqB,CAACZ,gBAAgB,CAAC;EAC/D,MAAMa,oBAAoB,GAAG,MAAMF,WAAW,CAACG,mBAAmB,CAAC,IAAIzB,WAAA,CAAA0B,6BAA6B,EAAE,EAAE,CAAC,EAAE,CAACR,UAAU,CAACS,OAAO,CAAC,CAAC;EAChI,MAAMC,eAAe,GAAG,IAAI1B,kBAAA,CAAA2B,gBAAgB,CAAC;IAC3CC,QAAQ,EAAEnB,gBAAgB;IAC1BU,iBAAiB,EAAEH,UAAU,CAACS,OAAO;IACrCI,KAAK,EAAElB,cAAc;IACrBmB,cAAc,EAAER,oBAAoB;IACpCS,YAAY,EAAErB,MAAM,CAACqB;GACtB,CAAC;EACFzB,KAAK,CAAC,SAAS,EAAEI,MAAM,CAAC;EACxB,MAAMsB,OAAO,GAAG,MAAMvB,gBAAgB,CAACwB,UAAU,EAAE,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACH,OAAO,CAAC;EAC5E,MAAMI,aAAa,GAAG,IAAIlC,eAAA,CAAAmC,aAAa,CAAC3B,MAAM,CAAC4B,UAAU,EAAE5B,MAAM,CAACS,iBAAiB,EAAEa,OAAO,CAAC;EAC7F,OAAO,MAAM,IAAI/B,uBAAA,CAAAsC,qBAAqB,CACpCP,OAAO,EACPtB,MAAM,EACNC,cAAc,EACdF,gBAAgB,EAChB2B,aAAa,EACbpB,UAAU,EACVU,eAAe,CAChB,CAACc,IAAI,EAAE;AACV;AA5BAC,OAAA,CAAAjC,YAAA,GAAAA,YAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}